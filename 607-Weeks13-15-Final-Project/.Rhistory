,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
academicYearId <- 18
paste("20", academicYearId, "/acs/acs5/profile")
?paste
paste("20", academicYearId, "/acs/acs5/profile", sep = "")
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)) %>%
select(DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
census <- response_df
#summary(census)
#head(census)
output_file_name <- paste("census_data_20", academicYearId, ".csv", sep = "")
write.csv(census, file = output_file_name, row.names = FALSE,)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)) %>%
select(Source = 'US Census American Community Survey 5-Year'
,AcademicYearId = academicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)
,DataSource = 'US Census American Community Survey 5-Year'
,AcademicYearId = academicYearId) %>%
select(DataSource
,AcademicYearId = academicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)
,DataSource = 'US Census American Community Survey 5-Year'
,AcademicYearId = as.numeric(academicYearId)) %>%
select(DataSource
,AcademicYearId = academicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)
,DataSource = "US Census American Community Survey 5-Year"
,AcademicYearId = as.numeric(academicYearId)) %>%
select(DataSource
,AcademicYearId = academicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)
,DataSource = "US Census American Community Survey 5-Year"
#,AcademicYearId = as.numeric(academicYearId)
) %>%
select(DataSource
#,AcademicYearId = academicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
census <- response_df
#summary(census)
#head(census)
output_file_name <- paste("census_data_20", academicYearId, ".csv", sep = "")
write.csv(census, file = output_file_name, row.names = FALSE,)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)
,DataSource = "US Census American Community Survey 5-Year"
,AcademicYearId = as.numeric(academicYearId)
) %>%
select(DataSource
#,AcademicYearId = academicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
census <- response_df
#summary(census)
#head(census)
output_file_name <- paste("census_data_20", academicYearId, ".csv", sep = "")
write.csv(census, file = output_file_name, row.names = FALSE,)
# load necessary supporting packages
library(dplyr)
library(stringr)
library(httr)
library(ggplot2)
# get the parts of the api request
academicYearId <- 18
url_base <-"https://api.census.gov/data/"
dataset <- paste("20", academicYearId, "/acs/acs5/profile", sep = "")   #5-year american community survey profiles
query_header <- "?get="
query_variables <- "DP05_0001E,DP04_0001E,DP04_0002PE,DP03_0062E,"
#est. ntotalPop, est. nHousingUnits, est. PctHousingOccuppied, est. median household income
geographicGroupings <- "NAME&for=school%20district%20(unified):*&in=state:26" #geographic school districts in MI
# construct api request and stored the results
response <- GET(paste(url_base
,dataset
,query_header
,query_variables
,geographicGroupings
,sep = ""))
# parse the api results
response_parsed <- content(response, "parse")
# unlist the data into a matrix and transpose that matrix
response_unlisted <- sapply(response_parsed, unlist)
response_transpose <- t(response_unlisted)
# load into a data frame
# rows 2:end contain data
response_df <- data.frame(response_transpose[2:nrow(response_transpose),], stringsAsFactors = FALSE)
# row 1 contains column headers
names(response_df) <- response_transpose[1,]
#review column headers and rename as needed
names(response_df)
names(response_df) <- c('TotalPopulation'
, 'nHousingUnits'
, 'PctHouseUnitsOccuppied'
, 'MedianHouseholdIncome'
, 'DistrictName'
, 'StateCode'
, 'DistrictCode_NCES')
#update data types as needed
response_df <- response_df %>%
mutate(DistrictCode_NCES = paste("00000", DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = str_trunc(DistrictCode_NCES, 5, side="left", ellipsis="")) %>%
mutate(DistrictCode_NCES = paste(StateCode, DistrictCode_NCES, sep = "")) %>%
mutate(DistrictCode_NCES = as.numeric(DistrictCode_NCES)
,DistrictName = as.factor(DistrictName)
,TotalPopulation =  as.numeric(TotalPopulation)
,nHousingUnits = as.numeric(nHousingUnits)
,PctHouseUnitsOccuppied = as.numeric(PctHouseUnitsOccuppied)
,MedianHouseholdIncome = as.numeric(MedianHouseholdIncome)
,DataSource = "US Census American Community Survey 5-Year"
,AcademicYearId = as.numeric(academicYearId)
) %>%
select(DataSource
,AcademicYearId
,DistrictCode_NCES
,DistrictName
,TotalPopulation
,nHousingUnits
,PctHouseUnitsOccuppied
,MedianHouseholdIncome)
census <- response_df
#summary(census)
#head(census)
output_file_name <- paste("census_data_20", academicYearId, ".csv", sep = "")
write.csv(census, file = output_file_name, row.names = FALSE,)
